import { W as WithChildren } from './helpers-3dc821e8.js';
import { G as Globals } from './scopes-fb583eb4.js';
import { T as TajribaConnection } from './tajriba_connection-cec7bb43.js';
import { BehaviorSubject } from 'rxjs';
import { T as TajribaProvider } from './provider-7f8a4a91.js';

declare class ParticipantContext {
    constructor(url: string, ns: string);
    get connecting(): BehaviorSubject<boolean>;
    get connected(): BehaviorSubject<boolean>;
    register(playerIdentifier: string): Promise<void>;
    stop(): void;
}
declare type Mode<T> = (participantID: string, provider: TajribaProvider) => T;

declare type EmpiricaMenuProps = {
    position: "top" | "top-left" | "top-right" | "bottom" | "bottom-left" | "bottom-right";
};
declare function EmpiricaMenu({ position }: EmpiricaMenuProps): JSX.Element | null;

declare type EmpiricaParticipantProps = WithChildren<{
    url: string;
    ns: string;
    modeFunc?: Mode<any>;
}>;
declare function EmpiricaParticipant({ url, ns, modeFunc, children, }: EmpiricaParticipantProps): JSX.Element;

declare function Finished(): JSX.Element;

declare function Loading(): JSX.Element;

declare function Logo(): JSX.Element;

declare function NoGames(): JSX.Element;

declare function useParticipantContext(): ParticipantContext | undefined;
declare function useTajribaConnecting(): boolean | undefined;
declare function useTajribaConnected(): boolean | undefined;
declare function useTajriba(): TajribaConnection | undefined;
declare function useGlobal(): Globals | undefined;
declare function useConsent(ns?: string): [boolean, (() => void) | undefined];
declare function usePlayerID(): [
    boolean,
    string | undefined,
    ((v: string) => void) | undefined
];

export { EmpiricaMenu as E, Finished as F, Loading as L, Mode as M, NoGames as N, ParticipantContext as P, EmpiricaMenuProps as a, EmpiricaParticipant as b, EmpiricaParticipantProps as c, Logo as d, useGlobal as e, useParticipantContext as f, usePlayerID as g, useTajriba as h, useTajribaConnected as i, useTajribaConnecting as j, useConsent as u };
