import React, { ChangeEventHandler } from 'react';
import { W as WithChildren, C as ConsentProps, P as PlayerCreateProps } from './helpers-3dc821e8.js';
import { k as Attributable } from './scopes-fb583eb4.js';
import { G as Game, P as Player, R as Round, S as Stage } from './classic-9e2fdd9a.js';
import { c as StepTick } from './provider-7f8a4a91.js';

declare type StepsFunc = (props: {
    game?: Game | null;
    player?: Player | null;
}) => React.ElementType[] | undefined;
declare type StepsProps = WithChildren<{
    steps: React.ElementType[] | StepsFunc;
    progressKey: string;
    doneKey: string;
    object?: Attributable;
}>;

interface EmpiricaContextProps {
    children: React.ReactNode;
    noGames?: React.ElementType;
    consent?: React.ElementType<ConsentProps>;
    playerCreate?: React.ElementType<PlayerCreateProps>;
    lobby?: React.ElementType;
    introSteps: React.ElementType[] | StepsFunc;
    exitSteps: React.ElementType[] | StepsFunc;
    finished?: React.ElementType;
    loading?: React.ElementType;
    connecting?: React.ElementType;
    unmanagedGame: boolean;
    unmanagedAssignment: boolean;
    disableConsent: boolean;
    disableNoGames: boolean;
    disableURLParamsCapture: boolean;
}
declare function EmpiricaContext({ noGames: NoGamesComp, consent: ConsentComp, playerCreate: PlayerCreateForm, introSteps, lobby, exitSteps, finished, loading: LoadingComp, connecting: ConnectingComp, unmanagedGame, unmanagedAssignment, disableConsent, disableNoGames, disableURLParamsCapture, children, }: EmpiricaContextProps): JSX.Element;

declare function Lobby(): JSX.Element;

declare function Quiz({ next }: {
    next: () => void;
}): JSX.Element;

interface SliderProps {
    value: number;
    onChange: ChangeEventHandler<HTMLInputElement>;
    min?: number;
    max?: number;
    stepSize?: number;
    disabled?: boolean;
}
declare function Slider({ value, onChange, min, max, stepSize, disabled, }: SliderProps): JSX.Element;

declare type ChatProps = WithChildren<{
    scope: Attributable;
    attribute: string;
    loading?: React.ElementType;
}>;
declare function Chat({ scope, attribute, loading: LoadingComp, }: ChatProps): JSX.Element;

declare function Sweeper(): JSX.Element | null;

declare function usePlayer(): Player | null | undefined;
declare function useGame(): Game | null | undefined;
declare function useRound(): Round | null | undefined;
declare function useStage(): Stage | null | undefined;
declare function useStageTimer(): StepTick | undefined;
declare function usePlayers(): Player[] | undefined;
declare function usePartModeCtx<M>(): M | undefined;
declare function usePartModeCtxKey<M, K extends keyof M, R>(name: K): R | undefined;

export { Chat as C, EmpiricaContext as E, Lobby as L, Quiz as Q, Slider as S, EmpiricaContextProps as a, SliderProps as b, StepsFunc as c, StepsProps as d, ChatProps as e, Sweeper as f, usePartModeCtx as g, usePartModeCtxKey as h, usePlayer as i, usePlayers as j, useRound as k, useStage as l, useStageTimer as m, useGame as u };
