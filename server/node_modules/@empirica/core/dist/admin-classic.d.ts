export { k as Attributable, b as AttributeChange, e as AttributeInput, c as AttributeOptions, d as AttributeUpdate, C as Constructor, J as Json, i as JsonArray, j as JsonValue, S as ScopeConstructor, f as ScopeIdent, g as ScopeUpdate, A as SharedAttribute, a as SharedAttributes, G as SharedGlobals, h as SharedScope } from './scopes-fb583eb4.js';
import { L as ListenersCollector } from './context-d910830c.js';
export { j as AddLinkPayload, k as AddScopePayload, l as AddTransitionPayload, g as AttributeMsg, A as Attributes, E as EventContext, n as EvtCtxCallback, F as Finalizer, G as Globals, K as KV, o as ListenersCollectorProxy, b as Scope, e as ScopeSubscriptionInput, c as Scopes, m as StepPayload, i as TajribaAdminAccess, T as TajribaEvent } from './context-d910830c.js';
import { d as Context, e as ClassicKinds } from './proxy-b90b63a5.js';
export { A as AttrInput, B as Batch, C as Classic, f as ClassicConfig, a as ClassicListenersCollector, b as ClassicLoader, E as EventProxy, G as Game, P as Player, g as PlayerGame, h as PlayerRound, i as PlayerStage, R as Round, S as Stage, c as classicKinds, j as evt } from './proxy-b90b63a5.js';
import '@empirica/tajriba';
import 'rxjs';
import './tajriba_connection-cec7bb43.js';

interface TajServer {
    stop: () => void;
    port: number;
    url: string;
    username: string;
    password: string;
    srtoken: string;
}
interface StartTajribaOptions {
    configFile?: string;
    tajFile?: string;
    logLevel?: string;
    printLogs?: boolean;
    srtoken?: string;
    username?: string;
    password?: string;
}
declare function withTajriba(fn: (tajServer: TajServer) => void, options?: StartTajribaOptions): Promise<void>;

declare enum ExportFormat {
    CSV = "csv",
    JSON = "json"
}
declare function runExport(url: string, token: string | null, srtoken: string, format: ExportFormat, output: string): Promise<void>;

declare type LobbyConfig = {};
declare function Lobby(_?: LobbyConfig): (_: ListenersCollector<Context, ClassicKinds>) => void;

export { ClassicKinds, Context, ExportFormat, ListenersCollector, Lobby, LobbyConfig, StartTajribaOptions, TajServer, runExport, withTajriba };
