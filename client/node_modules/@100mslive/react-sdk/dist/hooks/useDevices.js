import{__awaiter as e}from"../node_modules/tslib/tslib.es6.mjs.js";import{useCallback as i}from"react";import{selectDevices as t,selectLocalMediaSettings as o,selectIsAllowedToPublish as d,DeviceType as u}from"@100mslive/hms-video-store";import{useHMSActions as s,useHMSStore as p}from"../primitives/HmsRoomProvider.js";import{logErrorHandler as v}from"../utils/commons.js";const c=(c=v)=>{const a=s(),r=p(t),m=p(o),n=p(d),I={[u.audioOutput]:m.audioOutputDeviceId},l={[u.audioOutput]:r.audioOutput};n.video&&(l[u.videoInput]=r.videoInput,I[u.videoInput]=m.videoInputDeviceId),n.audio&&(l[u.audioInput]=r.audioInput,I[u.audioInput]=m.audioInputDeviceId);return{allDevices:l,selectedDeviceIDs:I,updateDevice:i((({deviceType:i,deviceId:t})=>e(void 0,void 0,void 0,(function*(){try{switch(i){case u.audioInput:yield a.setAudioSettings({deviceId:t});break;case u.videoInput:yield a.setVideoSettings({deviceId:t});break;case u.audioOutput:yield a.setAudioOutputDevice(t)}}catch(e){c(e,"updateDevices")}}))),[c,a])}};export{c as useDevices};
//# sourceMappingURL=useDevices.js.map
